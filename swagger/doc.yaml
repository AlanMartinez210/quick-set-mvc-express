openapi: 3.0.0
info:
  title: c2link
  description: c2linkのAPI仕様書
  version: 1.0.0
tags:
  - name: auth
    description: 新規登録、ログイン、ログアウト
    externalDocs:
      description: express-session
      url: 'https://github.com/expressjs/session'
  - name: recruitlist
    description: 募集、予定の一覧
  - name: mypage
    description: マイページ
  - name: schedule
    description: スケジュール
  - name: review
    description: レビュー
  - name: matching
    description: マッチング
  - name: message
    description: メッセージ一覧、チャット
  - name: cosgroup
    description: 併せ募集
  - name: public
    description: 公開ページ
paths:

  # 認証
  /register:
    get:
      tags:
        - auth
      summary: 新規登録ページの表示
      description: 新規登録ページを表示する。
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
  /api/register:
    post:
      tags:
        - auth
      summary: ユーザー登録処理
      description: 新規ユーザーの情報を登録します。
      responses:
        '200':
          description: OK

  /api/login:
    post:
      tags:
        - auth
      summary: ログイン処理。
      responses:
        '200':
          description: OK
  /api/logout:
    post:
      tags:
        - auth
      summary: ログアウト処理。
      responses:
        '200':
          description: OK

  # 募集一覧
  /recruitlist:
    get:
      tags:
        - recruitlist
      summary: 募集、予定の一覧の取得/表示
      responses:
        '200':
          description: 募集/予定情報のJSONデータ
  /recruitlist/today:
    get:
      tags:
        - recruitlist
      summary: 当日の募集、予定の一覧の取得/表示
      responses:
        '200':
          description: OK
  /recruitlist/detail/{user_id}:
    get:
      tags:
        - recruitlist
      summary: 当日の募集、予定の一覧の取得/表示
      operationId: index
      parameters:
        - name: user_id
          in: path
          description: データ取得対象のユーザーID
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_detail'

  # マイページ
  /mypage:
    get:
      tags:
        - mypage
      summary: マイページの表示
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mypage_index'
  /mypage/profile:
    get:
      tags:
        - mypage
      summary: ユーザー情報の取得/表示
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_profile'
    put:
      tags:
        - mypage
      summary: ユーザー情報の編集
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_profile'

  /mypage/site:
    get:
      tags:
        - mypage
      summary: ユーザーのサイト情報の取得/表示
      description: ユーザーのサイトの動作や通知に関する情報の取得/ページの表示をします。
      responses:
        '200':
          description: OK
    put:
      tags:
        - mypage
      summary: ユーザーのサイト情報の更新
      description: ユーザーのサイトの動作や通知に関する情報の更新をします。
      responses:
        '200':
          description: OK
  /mypage/sampleImage:
    get:
      tags:
        - mypage
      summary: ユーザーのサンプル画像情報の取得/表示
      description: ユーザーのサイトの動作や通知に関する情報の更新をします。
      responses:
        '200':
          description: OK
    put:
      tags:
        - mypage
      summary: ユーザーのサンプル画像情報の更新
      responses:
        '200':
          description: OK
  /mypage/extService:
    get:
      tags:
        - mypage
      summary: ユーザーの外部サービス連携情報の取得/表示
      responses:
        '200':
          description: OK
    put:
      tags:
        - mypage
      summary: ユーザーの外部サービス連携情報の更新
      responses:
        '200':
          description: OK
  /mypage/schedule:
    get:
      tags:
        - schedule
      summary: 月単位のスケジュールの取得/表示
      description: 当年月のユーザーのスケジュール情報一覧の取得/ページの表示をします。
      responses:
        '200':
          description: OK
    post:
      tags:
        - schedule
      summary: スケジュールの登録/編集
      description: ユーザーが入力したスケジュール情報を登録、またデータが存在する場合は編集します。
      responses:
        '200':
          description: OK
    delete:
      tags:
        - schedule
      summary: スケジュールの削除
      description: ユーザーが指定したスケジュール情報を削除します。
      responses:
        '200':
          description: OK
  /mypage/schedule/year/month:
    get:
      tags:
        - schedule
      summary: 月単位のスケジュールの取得/表示
      description: パラメータで指定した年月のユーザーのスケジュール情報一覧の取得/ページの表示をします。
      responses:
        '200':
          description: OK
  /mypage/schedule/date_key:
    get:
      tags:
        - schedule
      summary: 日単位のスケジュールの取得
      description: パラメータで指定した日付のユーザーのスケジュール情報の取得をします。
      responses:
        '200':
          description: OK
  /mypage/review:
    get:
      tags:
        - review
      summary: レビュー情報の取得/表示
      description: 未レビュー一覧、あなたへのレビュー一覧、レビュー履歴一覧を取得/表示します。
      responses:
        '200':
          description: OK
    post:
      tags:
        - review
      summary: レビュー情報の登録/編集
      description: レビュー情報の登録、すでにデータが存在する場合は編集を行います。
      responses:
        '200':
          description: OK
  /mypage/review/pending:
    get:
      tags:
        - review
      summary: 未レビュー情報の取得/表示
      description: 未レビュー一覧を取得/表示します。
      responses:
        '200':
          description: OK
  /mypage/review/sendList:
    get:
      tags:
        - review
      summary: あなたへのレビュー一覧の取得/表示
      description: ログインユーザーを対象としたレビュー一覧の取得と表示を行います。
      responses:
        '200':
          description: OK
  /mypage/review/recieveList:
    get:
      tags:
        - review
      summary: レビュー履歴一覧の取得/表示
      description: レビュー一覧の取得と表示を行います。
      responses:
        '200':
          description: OK
  /mypage/matching:
    get:
      tags:
        - matching
      summary: マッチング一覧の取得/表示
      description: 撮影日当日以前のマッチング一覧の取得と表示を行います。
      responses:
        '200':
          description: OK
    put:
      tags:
        - matching
      summary: マッチングの状態の更新
      description: ''
      responses:
        '200':
          description: OK
  /mypage/matching/historyList:
    get:
      tags:
        - matching
      summary: ユーザー登録処理を行います。
      responses:
        '200':
          description: OK
  /message:
    post:
      tags:
        - message
      summary: Add a new pet to the store
      description: ''
      operationId: ''
      responses:
        '405':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              $ref: ''
          application/xml:
            schema:
              $ref: ''
        description: Pet object that needs to be added to the store
        required: true
  /public/adminInfo:
    get:
      tags:
        - public
      summary: 運営情報の取得/表示
      responses:
        '200':
          description: OK
  /public/privacyPolicy:
    get:
      tags:
        - public
      summary: プライバシーポリシーの取得/表示
      responses:
        '200':
          description: OK
  /public/aboutUserData:
    get:
      tags:
        - public
      summary: 利用者様のデータについての取得/表示
      responses:
        '200':
          description: OK
  /public/contact:
    get:
      tags:
        - public
      summary: 利用者様のデータについての取得/表示
      responses:
        '200':
          description: OK
externalDocs:
  description: c2link git source
  url: 'https://bitbucket.org/teampyon/c2link'
servers:
  # - url: 'https://localhost:3001/'
  - url: 'http://localhost:3001/'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: c2linkApiKey
  schemas:
    # マイページアクセス時
    mypage_index:
      properties:
        no_review_num:
          description: 未レビューの数
          type: integer
          format: int64
        matching_info_num:
          description: 保留状態のマッチング数
          type: integer
          format: int64
    # ユーザープロフィール
    user_profile:
      properties:
        icon_url:
          description: アイコンの画像URL
          type: string
          format: varchar(255)
        user_name:
          description: ユーザー名
          type: string
          format: varchar(255)
        email:
          description: メールアドレス
          type: string
          format: varchar(255)
        user_prefectures:
          description: 活動地域
          type: string
          format: json
        user_tags:
          description: よく使うタグ
          type: string
          format: json
    # ユーザー詳細
    user_detail:
      properties:
        id:
          description: Sequelize id
          type: integer
          format: int64
        userid:
          description: ユーザーID
          type: string
          format: varchar(255)
        user_name:
          description: ユーザー名
          type: string
          format: varchar(255)
        password:
          description: パスワード
          type: string
          format: varchar(255)
        email:
          description: メールアドレス
          type: string
          format: varchar(255)
        icon_url:
          description: アイコンの画像URL
          type: string
          format: varchar(255)
        user_type:
          description: アイコンの画像URL
          type: integer
        created_at:
          description: 作成日
          type: string
          format: date-time
        updated_at:
          description: 更新日
          type: string
          format: date-time
